// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
#include "RobotMap.h"
#include "LiveWindow/LiveWindow.h"
// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=ALLOCATION
std::shared_ptr<frc::SpeedController> RobotMap::driveBaseSubFrontLeftVictorSP;
std::shared_ptr<frc::SpeedController> RobotMap::driveBaseSubBackLeftVictorSP;
std::shared_ptr<frc::SpeedController> RobotMap::driveBaseSubFrontRightVictorSP;
std::shared_ptr<frc::SpeedController> RobotMap::driveBaseSubBackRightVictorSP;
std::shared_ptr<frc::RobotDrive> RobotMap::driveBaseSubrobotDrive;
std::shared_ptr<frc::SpeedController> RobotMap::intakeSubsystemIntakeTalon;
// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=ALLOCATION

void RobotMap::init() {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    frc::LiveWindow *lw = frc::LiveWindow::GetInstance();

    driveBaseSubFrontLeftVictorSP.reset(new frc::VictorSP(0));
    lw->AddActuator("DriveBaseSub", "FrontLeftVictorSP", std::static_pointer_cast<frc::VictorSP>(driveBaseSubFrontLeftVictorSP));
    
    driveBaseSubBackLeftVictorSP.reset(new frc::VictorSP(1));
    lw->AddActuator("DriveBaseSub", "BackLeftVictorSP", std::static_pointer_cast<frc::VictorSP>(driveBaseSubBackLeftVictorSP));
    
    driveBaseSubFrontRightVictorSP.reset(new frc::VictorSP(15));
    lw->AddActuator("DriveBaseSub", "FrontRightVictorSP", std::static_pointer_cast<frc::VictorSP>(driveBaseSubFrontRightVictorSP));
    
    driveBaseSubBackRightVictorSP.reset(new frc::VictorSP(14));
    lw->AddActuator("DriveBaseSub", "BackRightVictorSP", std::static_pointer_cast<frc::VictorSP>(driveBaseSubBackRightVictorSP));
    
    driveBaseSubrobotDrive.reset(new frc::RobotDrive(driveBaseSubFrontLeftVictorSP, driveBaseSubBackLeftVictorSP,
              driveBaseSubFrontRightVictorSP, driveBaseSubBackRightVictorSP));
    
    driveBaseSubrobotDrive->SetSafetyEnabled(false);
        driveBaseSubrobotDrive->SetExpiration(0.1);
        driveBaseSubrobotDrive->SetSensitivity(0.5);
        driveBaseSubrobotDrive->SetMaxOutput(1.0);

    intakeSubsystemIntakeTalon.reset(new frc::PWMTalonSRX(13));
    lw->AddActuator("IntakeSubsystem", "IntakeTalon", std::static_pointer_cast<frc::PWMTalonSRX>(intakeSubsystemIntakeTalon));
    

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
}
